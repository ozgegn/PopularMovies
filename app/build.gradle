apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: 'ktlint.gradle'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.ozgegn.popularmovies"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "TMDB_KEY", TMDB_KEY)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        sourceSets {
            androidTest.java.srcDirs += "src/test-common/java"
            test.java.srcDirs += "src/test-common/java"
            test.assets.srcDirs += files("$projectDir/schemas".toString())
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.google.android.material:material:$material_layout_version"

    //Architecture Component
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi-kotlin-codegen:$moshi_codegen_version"
    implementation "com.github.skydoves:sandwich:$sandwich_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:hilt-android:$hilt_dagger_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    implementation "androidx.hilt:hilt-common:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_dagger_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.florent37:glidepalette:$glide_palette_version"
    implementation "com.github.skydoves:rainbow:$rainbow_version"

    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //WhatIfnull
    implementation "com.github.skydoves:whatif:$whatif_version"

    //Transformation
    implementation "com.github.skydoves:transformationlayout:$transformation_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "androidx.arch.core:core-testing:$arch_component_version"

}